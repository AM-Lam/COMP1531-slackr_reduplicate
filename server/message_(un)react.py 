import setup

token = setup.generateToken('hayden@gmail.com', '123456', 'Hayden', 'Smith')
channel_id_list = {'channel 1', 'Channel 1', 'channel1'}
message_id = "456789"
# format of message_id_dic: 'message_id':{'token', 'channel_id'}
message_id_dic = {'message_id': {'123', 'channel1'}, 'message': {'456', 'channel 1'}, 'id': {'123', 'Channel 1'}}
message_id = setup.generateMessage(token, channel_id, message)
# format of react_id_dic: react_id: {token, messsage_id, react_type}
react_id_dic = {'react': {'123','message_id','like'}, 'reacted': {'456'','message', 'sad}}
react_id_type = {'like', 'love', 'sad', 'hate', 'smile', 'angry'}
# TODO
# Add more detail to the u_id_dic
u_id_dic = {'123': '123', '456': '456', '789': '789', '159': '159', 'AD': 'AD'}

def message_react(token, message_id, react_id):
    # assume we can get the list of channels that the user's joining by getting u_id's dictionary
    # message_id is not a valid message within a channel that the authorised user has joined
    # message does not exist
    if message_id == None:
        message_unreact(token, message_id);
        raise ValueError("The message no longer exists.")
    # user is not in the channel anymore
    if message_id_dic[react_id][1] not in u_id_dic[token][channel]:
        raise ValueError("Invalid message.")
    #  react_id is not a valid React ID
    if react_id not in react_id_type:
        return ValueError("Please enter a valid React.")
    #  Message with ID message_id already contains an active React with ID react_id
    if message_id_dic[react_id][1] != None:
        return ValueError("You reacted before. Please don't repeat.")

    # if the function is working
    # add the react_id into dictionary
    react_id_dic[react_id] = {token, message_id}
    
def message_unreact(token, message_id, react_id):

    # ValueError when:  
    #  message_id is not a valid message within a channel that the authorised user has joined
    if message_id == None:
        message_unreact(token, message_id);
        raise ValueError("The message no longer exists.")
    # user is not in the channel anymore
    if message_id_dic[react_id][1] not in u_id_dic[token][channel]:
        raise ValueError("Invalid message.")
    #  react_id is not a valid React ID
    if react_id not in react_id_type:
        return ValueError("Please enter a valid React number.")
    #  Message with ID message_id already contains an active React with ID react_id
    if message_id_dic[react_id][1] != None:
        return ValueError("Cannot unreact this message.")

    # If the function is working, delete the record of react in dictionary    
    del react_id_dic[react_id]