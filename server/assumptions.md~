AUTHOR -----> ARPIT RULANIA
    
    assumptions to be made for iteration 1:
        
        auth_register:
        -> calling auth_register automatically logs in the user for the current session.
        -> z1111@unsw.com is equal to z1111@student.unsw.com
        -> user@gmail.com is equal to user@gmail.com.au 
        -> unsuccessful register returns an empty dictionary
        ->  if email on server is z11111@student.unse.edu.au and
            a new registeration z11111@unse.edu.au should not be possible
        ->  auth_register.validate_regEmail returns true if email does not exist
        
        auth_login:
        -> unsuccessful login returns an empty dictionary
        -> password field or email field left empty should raise an error
        -> raise error if password is incorrectly matched to the email
        -> auth_login.validate_email returns true if email does exist on the server
        
        auth_logout:
        -> logout should not be possible twice        
        -> logout returns value errors for invalid tokens
        -> logout returns true boolean on successful logout
        
        auth_passwordreset_request:
        -> the reset code is temporarily saved in the server for a short time
        
        auth_passwordreset_reset:
        -> the reset code must be an integer without any alphabets or special characters
        -> the new password should follow valid password rules
        -> the new password should not be same as the old password
        
        channel_invite:
        -> only the owners of the channel can invite other users
        -> invited user when added to the channel is not given special permissions
        -> user is added as a member imediatly after detail verification
        
        channel_details:
        -> all_members lists also includes owner_members
        -> if only one member then both lists, all_members and owner_members are 
        same
        
        channel_messages:
        -> if there are 10 messages and start is 10 then start = end = -1
        -> function should not uotput the same message more than once (filter 
        out t
        ->
        
        
        
        
        

        

